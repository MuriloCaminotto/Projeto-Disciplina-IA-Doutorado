# -*- coding: utf-8 -*-
"""treinaModelo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qCx82CQpaaf1nxFLj0qbFJYpKr-iQJ4C
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import StratifiedShuffleSplit
from sklearn.svm import SVC
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.metrics import f1_score
from joblib import dump, load

def treinaModelo(db,modelName,model = 'svm'):
  df = pd.read_csv(db)

  y = df.target
  X = df.drop('target',axis=1).values

  sss = StratifiedShuffleSplit(n_splits=10, test_size=0.33, random_state=0)
  sss.get_n_splits(X, y)

  accScore = []
  f1Score = []

  for train_index, test_index in sss.split(X, y):
    X_train, X_test = X[train_index], X[test_index]
    y_train, y_test = list(y[train_index]), list(y[test_index])

    if model == 'svm':
      model = SVC()
    elif model == 'sigmoid':
      model = SVC(kernel = 'sigmoid')
    elif model == 'rf':
      model = RandomForestClassifier()
    
    model.fit(X_train,y_train)
    y_pred = model.predict(X_test)
    accScore.append(accuracy_score(y_test, y_pred))
    f1Score.append(f1_score(y_test, y_pred))

  accScoreDict[db.split('/')[-1].split('.')[0]] = np.mean(accScore)
  f1ScoreDict[db.split('/')[-1].split('.')[0]] = np.mean(f1Score)
  print(db.split('/')[-1].split('.')[0],'Acurácia Média -> ',np.mean(accScore))
  print(db.split('/')[-1].split('.')[0],'F1 Score Médio -> ',np.mean(f1Score))
  
  modelName += '.joblib'
  dump(model, modelName)